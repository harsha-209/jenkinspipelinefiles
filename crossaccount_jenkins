#!/bin/bash
#TEMP_ROLE=$(aws sts assume-role --role-arn "arn:aws:iam::account:role/harshad214" --role-session-name "CFCacheInvalidationSession")
##TEMP_ROLE=$(aws sts assume-role --role-arn "arn:aws:iam::account:user/harshad123" --role-session-name "CFCacheInvalidationSession")
#export TEMP_ROLE
#aws sts assume-role --role-arn arn:aws:iam::account:role/harshad214 --role-session-name test
#echo $TEMP_ROLE
#export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
#export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
#export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
#echo $AWS_ACCESS_KEY_ID
#echo $AWS_SECRET_ACCESS_KEY
#echo $AWS_SESSION_TOKEN
#aws s3 ls


CREDENTIALS=`aws sts assume-role --role-arn arn:aws:iam::accountb or a:role/harshad214 --role-session-name RoleSession --duration-seconds 900 --output=json`
# 2) Capture current credentials to reset after executing command
#export ORIGINAL_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#export ORIGINAL_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
# 3) Set AWS Assumed Role Credentials on ENV
#export AWS_DEFAULT_REGION=eu-west-1
export AWS_ACCESS_KEY_ID=`echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId'`
export AWS_SECRET_ACCESS_KEY=`echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey'`
export AWS_SESSION_TOKEN=`echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken'`
export AWS_EXPIRATION=`echo ${CREDENTIALS} | jq -r '.Credentials.Expiration'`
# 4) Execute command as assumed role
aws s3 ls
# 5) Clean up assume role environment variables
unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset AWS_SESSION_TOKEN
unset AWS_EXPIRATION
